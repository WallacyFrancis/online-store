{"ast":null,"code":"var _jsxFileName = \"/home/wallacy/Documentos/Aulas_Trybe/Projetos/online-store/sd-014-b-project-frontend-online-store/src/pages/Home.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductCard from '../components/ProductCard';\nimport Loading from '../components/Loading';\nimport ListCategories from '../components/ListCategories';\nexport default class Home extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = ({\n      target: {\n        name,\n        value\n      }\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.handleRadio = async ({\n      target: {\n        checked,\n        value,\n        id\n      }\n    }) => {\n      if (checked) {\n        this.setState({\n          category: value,\n          productsResponse: [],\n          searchDone: true\n        }); // this.queryCategoryFilterById(id);\n\n        const fetchCategory = await getProductsFromCategoryAndQuery(id, '$QUERY');\n        console.log(fetchCategory); // this.setState({ productsResponse: fetchCategory.results });\n      }\n    };\n\n    this.handleClick = async () => {\n      const {\n        category,\n        searchText\n      } = this.state;\n      this.setState({\n        isLoading: true\n      });\n      const apiResponse = await getProductsFromCategoryAndQuery(category, searchText);\n      this.setState({\n        isLoading: false,\n        searchDone: true,\n        productsResponse: apiResponse.results\n      });\n    };\n\n    this.renderResults = () => {\n      const {\n        productsResponse\n      } = this.state;\n\n      if (productsResponse.length === 0) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 14\n          }\n        }, \"Nenhum produto foi encontrado\");\n      }\n\n      return productsResponse.map(product => /*#__PURE__*/React.createElement(ProductCard, {\n        product: product,\n        key: product.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }));\n    };\n\n    this.state = {\n      isLoading: false,\n      searchDone: false,\n      category: null,\n      searchText: '',\n      productsResponse: [] // categoryFilter: [],\n\n    };\n  }\n\n  render() {\n    const {\n      renderResults,\n      handleInputChange,\n      handleClick,\n      handleRadio,\n      state: {\n        isLoading,\n        searchDone,\n        searchText\n      }\n    } = this;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/cart\",\n      \"data-testid\": \"shopping-cart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Carrinho\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchText\",\n      id: \"query-input\",\n      value: searchText,\n      onChange: handleInputChange,\n      \"data-testid\": \"query-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Pesquisar\")), isLoading && /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }\n    }), searchDone && renderResults(), /*#__PURE__*/React.createElement(ListCategories, {\n      handleRadio: handleRadio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/wallacy/Documentos/Aulas_Trybe/Projetos/online-store/sd-014-b-project-frontend-online-store/src/pages/Home.jsx"],"names":["React","Component","Link","getProductsFromCategoryAndQuery","ProductCard","Loading","ListCategories","Home","constructor","handleInputChange","target","name","value","setState","handleRadio","checked","id","category","productsResponse","searchDone","fetchCategory","console","log","handleClick","searchText","state","isLoading","apiResponse","results","renderResults","length","map","product","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductCard from '../components/ProductCard';\nimport Loading from '../components/Loading';\nimport ListCategories from '../components/ListCategories';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      searchDone: false,\n      category: null,\n      searchText: '',\n      productsResponse: [],\n      // categoryFilter: [],\n    };\n  }\n\n  handleInputChange = ({ target: { name, value } }) => this.setState({ [name]: value });\n\n  handleRadio = async ({ target: { checked, value, id } }) => {\n    if (checked) {\n      this.setState({\n        category: value,\n        productsResponse: [],\n        searchDone: true,\n      });\n      // this.queryCategoryFilterById(id);\n      const fetchCategory = await getProductsFromCategoryAndQuery(id, '$QUERY');\n      console.log(fetchCategory);\n      // this.setState({ productsResponse: fetchCategory.results });\n    }\n  }\n\n  // queryCategoryFilterById = async (id) => {\n  //   const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${id}`);\n  //   const fetchCategory = await response.json();\n  //   this.setState({ productsResponse: fetchCategory.results });\n  // }\n\n  handleClick = async () => {\n    const { category, searchText } = this.state;\n    this.setState({ isLoading: true });\n\n    const apiResponse = await getProductsFromCategoryAndQuery(category, searchText);\n\n    this.setState({\n      isLoading: false,\n      searchDone: true,\n      productsResponse: apiResponse.results,\n    });\n  }\n\n  renderResults = () => {\n    const { productsResponse } = this.state;\n\n    if (productsResponse.length === 0) {\n      return <p>Nenhum produto foi encontrado</p>;\n    }\n\n    return productsResponse\n      .map((product) => <ProductCard product={ product } key={ product.id } />);\n  }\n\n  render() {\n    const { renderResults, handleInputChange, handleClick, handleRadio,\n      state: { isLoading, searchDone, searchText } } = this;\n\n    return (\n      <main>\n        <Link to=\"/cart\" data-testid=\"shopping-cart-button\">Carrinho</Link>\n        <p data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n        <form>\n          <input\n            type=\"text\"\n            name=\"searchText\"\n            id=\"query-input\"\n            value={ searchText }\n            onChange={ handleInputChange }\n            data-testid=\"query-input\"\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ handleClick }\n          >\n            Pesquisar\n          </button>\n        </form>\n        { isLoading && <Loading /> }\n        { searchDone && renderResults() }\n        <ListCategories handleRadio={ handleRadio } />\n      </main>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}